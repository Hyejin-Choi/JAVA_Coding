#2
class Sum{
int count =0;
int sum2=0;
int sum1=0;
	public void arr1(int a) {
		 
		sum1= sum1+a;
	}
	public void arr2(int b) {
	 sum2= sum2+b;
	}

	public int getCount() {
		count =sum1+sum2;
		return count;
	}
	
	
}
class Test{
	
	
	public static void main(String arg[]) throws InterruptedException {
		Sum cnt = new Sum();
		Runnable task1 =() ->{
			int[] arr1= new int[50];
			for(int i=0;i<=49; i++) {
				arr1[i]=i;
				cnt.arr1(arr1[i]);
			}};
		Runnable task2 =() ->{
			int[] arr2= new int[50];
			for(int i=0;i<=49; i++) {
				arr2[i]=i+50;
				cnt.arr2(arr2[i]);
			}};		
			
		Thread t1 = new Thread(task1);
		Thread t2 = new Thread(task2);
		t1.start();
		t2.start();
		t1.join();
		t2.join();
		System.out.println(cnt.getCount());
			
		
		
		
		
	}
	
	
}

#3

class Sort{
	int max1=0;
	int max2=0;
	public void max1(int max) {
		max1=max;
	}
    public void max2(int max) {
		max2=max;
	}
    public int result() {
    	if(max1>max2)
    		return max1;
    	else
    		return max2;
    }
}
class Test{
	
	
	public static void main(String arg[]) throws InterruptedException {
		Sort maxi = new Sort();
		Runnable task1 =() ->{		
			int[] arr1= new int[50];
			arr1[1]=(int)(100*Math.random());
			int max = arr1[1];
			for(int i=1;i<=49; i++) {
    		arr1[i]=(int)(100*Math.random());	
    				if(max < arr1[i])
    					max = arr1[i];
			}
			
			maxi.max1(max);
			
			
		};
		Runnable task2 =() ->{
			int[] arr2= new int[50];
			arr2[1]=(int)(100*Math.random());
			int max = arr2[1];
			for(int i=1;i<=49; i++) {
				arr2[i]=(int)(100*Math.random());
				if(max < arr2[i])
					max = arr2[i];
			}
			maxi.max2(max);
		};		
			
		Thread t1 = new Thread(task1);
		Thread t2 = new Thread(task2);
		t1.start();
		t2.start();
		t1.join();
		t2.join();
		System.out.println(maxi.result());
			
		
		
		
		
	}
	
	
}

#4

import java.util.Scanner;

class Counter{
	int count =10;
	//int first = 10;
	synchronized public void count(int num) {
		System.out.println("------------------------------");
		System.out.println("thread - "+num+"가 들어왔음.");
	System.out.printf("가능한 좌석수 : %d  요청할 좌석수 :   ",count);
		Scanner num2 = new Scanner(System.in);
		int a = num2.nextInt();
		if(a<=count)
			System.out.printf("%d 좌석이 예약되었음.\n",a);
			else
				System.out.println("좌석예약이 불가능합니다.");
		count = count - a;
	System.out.printf("Thread - %d가 나갑니다.\n ",num);
	System.out.println("------------------------------");
	}
}

class Mythread implements Runnable{
	
	Counter p;
	int number;
	public Mythread(int number,Counter p) {
		this.number=number;
		this.p = p;
		
		
	}
	public void run() {
		p.count(number);
		
	}
	
}


class Test{
	public static Counter count = new Counter();
	public static void main(String arg[] ) throws InterruptedException{
		
		Counter p = new Counter();
		
		new Thread(new Mythread(1,p)).start();
		sleep(1000);
		new Thread(new Mythread(2,p)).start();
		sleep(1000);
		new Thread(new Mythread(3,p)).start();
		
		
	
		
	}
	private static void sleep(int i) {
		// TODO Auto-generated method stub
		
	}
	
}

#5


